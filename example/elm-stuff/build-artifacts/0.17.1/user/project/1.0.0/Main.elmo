var _user$project$Main$renderStatus = function (model) {
	var status = model.status;
	var _p0 = status.online;
	if (_p0.ctor === 'Offline') {
		return _elm_lang$html$Html$text('boo');
	} else {
		return _elm_lang$html$Html$text('Yay you\'re online - go do something!');
	}
};
var _user$project$Main$initialModel = {status: _user$project$IsOnline$initialModel};
var _user$project$Main$Model = function (a) {
	return {status: a};
};
var _user$project$Main$StatusMsg = function (a) {
	return {ctor: 'StatusMsg', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		var _p2 = A2(_user$project$IsOnline$update, _p1._0, model.status);
		var updatedStatusModel = _p2._0;
		var statusCmd = _p2._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{status: updatedStatusModel}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$StatusMsg, statusCmd)
		};
	});
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$renderStatus(model),
				A2(
				_elm_lang$html$Html_App$map,
				_user$project$Main$StatusMsg,
				_user$project$IsOnline$view(model.status))
			]));
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: _user$project$Main$initialModel,
	_1: _elm_lang$core$Platform_Cmd$batch(
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$StatusMsg, _user$project$IsOnline$setRandomHost)
			]))
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _user$project$Main$init,
			update: _user$project$Main$update,
			view: _user$project$Main$view,
			subscriptions: function (_p3) {
				return _elm_lang$core$Platform_Sub$none;
			}
		})
};
